//### KEYBINDINGS ###
//
// Regex - Highlight Exclusion Rules:
//  ^.*\{\n.*\n.*"-.*\n(.*"when.*\n)?.*\},?\n
//
[
    //##########################################################################
    //### APPLICATION ###
    //##########################################################################
    //OPEN WINDOW
    {
        "key": "ctrl+n",
        "command": "workbench.action.newWindow"
    },
    //OPEN FOLDER
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFolder"
    },
    //NEW FILE - UNTITLED
    {
        "key": "alt+n",
        "command": "openEditors.newUntitledFile"
    },
    //NEW FILE - EXPLORER
    {
        "key": "ctrl+alt+n",
        "command": "explorer.newFile"
    },
    //NEW FOLDER - EXPLORER
    {
        "key": "shift+alt+n",
        "command": "explorer.newFolder"
    },
    //UNDO
    {
        "key": "ctrl+z",
        "command": "undo"
    },
    //REDO
    {
        "key": "ctrl+y",
        "command": "redo"
    },
    //SETTINGS
    {
        "key": "alt+f11",
        "command": "workbench.action.openSettings"
    },
    //KEYBINDINGS
    {
        "key": "shift+alt+f11",
        "command": "workbench.action.openGlobalKeybindings"
    },
    //EXTENSIONS
    {
        "key": "shift+alt+f12",
        "command": "workbench.view.extensions"
    },
    //DEVELOPER MODE
    {
        "key": "alt+f12",
        "command": "workbench.action.toggleDevTools"
    },
    //RELOAD WINDOWS
    {
        "key": "alt+f5",
        "command": "workbench.action.reloadWindow"
    },
    //##########################################################################
    //### VIEWS (CTRL+ALT+NUMPAD) ###
    //##########################################################################
    //### EDITOR (8,5) ###
    //FOCUS
    {
        "key": "ctrl+alt+numpad5",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    //MAXIMIZE
    {
        "key": "ctrl+alt+numpad8",
        "command": "workbench.action.maximizeEditor"
    },
    //### SIDEBAR (7,4) ###
    //EXPLORER
    {
        "key": "ctrl+alt+numpad4",
        "command": "workbench.explorer.fileView.focus",
        "when": "!filesExplorerFocus"
    },
    //EXPLORER - HIDE
    {
        "key": "ctrl+alt+numpad4",
        "command": "workbench.action.closeSidebar",
        "when": "sideBarFocus && filesExplorerFocus"
    },
    //EXPLORER - HIDE
    {
        "key": "escape",
        "command": "workbench.action.closeSidebar",
        "when": "sideBarFocus && filesExplorerFocus"
    },
    //SOURCE CONTROL
    {
        "key": "ctrl+alt+numpad7",
        "command": "workbench.scm.focus",
        "when": "workbench.scm.active && focusedView != 'workbench.scm'"
    },
    //SOURCE CONTROL - HIDE
    {
        "key": "ctrl+alt+numpad7",
        "command": "workbench.action.closeSidebar",
        "when": "sideBarFocus && focusedView == 'workbench.scm'"
    },
    //SOURCE CONTROL - TO EXPLORER
    {
        "key": "escape",
        "command": "workbench.explorer.fileView.focus",
        "when": "sideBarFocus && focusedView == 'workbench.scm'"
    },
    //### AUXILIARY (9,6) ###
    //BAR TOGGLE
    {
        "key": "ctrl+alt+numpad6",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    //TIMELINE
    {
        "key": "ctrl+alt+numpad9",
        "command": "timeline.focus",
        "when": "!auxiliaryBarFocus"
    },
    //TIMELINE - HIDE
    {
        "key": "ctrl+alt+numpad9",
        "command": "workbench.action.closeAuxiliaryBar",
        "when": "auxiliaryBarFocus"
    },
    //BAR HIDE
    {
        "key": "escape",
        "command": "workbench.action.closeAuxiliaryBar",
        "when": "auxiliaryBarFocus"
    },
    //### PANEL ([2] 1,0,3) ###
    //BAR TOGGLE
    {
        "key": "ctrl+alt+numpad2",
        "command": "workbench.action.togglePanel",
    },
    //TERMINAL
    {
        "key": "ctrl+alt+numpad0",
        "command": "terminal.focus",
        "when": "!panelFocus"
    },
    {
        "key": "ctrl+alt+numpad0",
        "command": "workbench.action.closePanel",
        "when": "panelFocus"
    },
    {
        "key": "ctrl+'",
        "command": "terminal.focus"
    },
    //PROBLEMS
    {
        "key": "ctrl+alt+numpad1",
        "command": "workbench.panel.markers.view.focus",
        "when": "!panelFocus"
    },
    {
        "key": "ctrl+alt+numpad1",
        "command": "workbench.action.closePanel",
        "when": "panelFocus"
    },
    //DEBUG CONSOLE
    {
        "key": "ctrl+alt+numpad3",
        "command": "workbench.panel.repl.view.focus",
        "when": "!panelFocus"
    },
    {
        "key": "ctrl+alt+numpad3",
        "command": "workbench.action.closePanel",
        "when": "panelFocus"
    },
    //HIDE
    {
        "key": "escape",
        "command": "workbench.action.closePanel",
        "when": "panelFocus"
    },
    //### OTHERS ('/','*') ###
    //ACTIVITY
    {
        "key": "ctrl+alt+numpad_divide",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    //STATUS
    {
        "key": "ctrl+alt+numpad_multiply",
        "command": "workbench.action.toggleStatusbarVisibility"
    },
    //##########################################################################
    //### EDITOR - TABS ###
    //##########################################################################
    //CLOSE
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor",
        //"when": "editorFocus"
    },
    //CLOSE ALL
    {
        "key": "alt+w",
        "command": "workbench.action.closeEditorsInGroup",
        //"when": "editorFocus"
    },
    //REOPEN
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.reopenClosedEditor"
    },
    //##########################################################################
    //### EDITOR - TABS AND GROUPS ###
    //##########################################################################
    // KEYBINDINGS:
    //   [ACTION] + [TARGET]
    //
    // [ACTIONS]:
    //   FOCUS      (CTRL+ALT)
    //   MOVE TAB   (CTRL+ALT+WIN)
    //   MOVE GROUP (CTRL+ALT+SHIFT+WIN)
    //
    // [TARGETS]:
    //   GROUPS (ARROWS)
    //   TABS   (PAGEUP,PAGEDOWN)
    //
    //### FOCUS ###
    //GROUPS
    //...
    //TABS
    //...
    //### MOVE TAB ###
    //GROUPS (Move tab to group)
    {
        "key": "ctrl+alt+win+left",
        "command": "workbench.action.moveEditorToLeftGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+win+right",
        "command": "workbench.action.moveEditorToRightGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+win+up",
        "command": "workbench.action.moveEditorToAboveGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+win+down",
        "command": "workbench.action.moveEditorToBelowGroup",
        "when": "editorFocus"
    },
    //TABS (Move tab inside group)
    {
        "key": "ctrl+alt+win+pageup",
        "command": "workbench.action.moveEditorLeftInGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+win+pagedown",
        "command": "workbench.action.moveEditorRightInGroup",
        "when": "editorFocus"
    },
    //### MOVE GROUP ###
    //GROUPS  (Move group to group)
    {
        "key": "ctrl+shift+alt+win+left",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+win+right",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+win+up",
        "command": "workbench.action.moveActiveEditorGroupUp",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+win+down",
        "command": "workbench.action.moveActiveEditorGroupDown",
        "when": "editorFocus"
    },
    //### PIN ###
    {
        "key": "alt+p",
        "command": "workbench.action.pinEditor",
        "when": "editorFocus && !activeEditorIsPinned"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.unpinEditor",
        "when": "editorFocus && activeEditorIsPinned"
    },
    //##########################################################################
    //### EDITOR ###
    //##########################################################################
    //CHANGE CASE
    {
        "key": "ctrl+shift+u",
        "command": "editor.action.transformToUppercase",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+u",
        "command": "editor.action.transformToUppercase",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+u",
        "command": "editor.action.transformToUppercase",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+u",
        "command": "editor.action.transformToLowercase",
        "when": "editorTextFocus && !editorReadonly"
    },
    //WORD - SELECT
    {
        "key": "ctrl+shift+left",
        "command": "cursorWordPartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    //WORD - DELETE
    {
        "key": "ctrl+backspace",
        //"command": "deleteWordLeft",
        "command": "deleteWordPartLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+delete",
        //"command": "deleteWordRight",
        "command": "deleteWordPartRight",
        "when": "editorTextFocus && !editorReadonly"
    },
    //LINE - DELETE
    {
        "key": "ctrl+shift+delete",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    //LINE - DUPLICATE
    {
        "key": "ctrl+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    //LINE - MOVE
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    //LINE - INSERT
    {
        "key": "ctrl+shift+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly && !findWidgetVisible"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly && !findWidgetVisible"
    },
    //LINE - COMMENT
    {
        "key": "ctrl+oem_2",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_2",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+abnt_c1",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+abnt_c1",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+;",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+;",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    //MULTILINE
    {
        "key": "alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    //REPLACE
    {
        "key": "ctrl+r",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    //MARKDOWN
    {
        "key": "ctrl+p",
        "command": "markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    //FILES
    {
        "key": "ctrl+e",
        "command": "workbench.files.action.showActiveFileInExplorer",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "revealFileInOS",
        "when": "editorFocus"
    },
    //##########################################################################
    //### EDITOR - FOLDING ###
    //##########################################################################
    //FOLDING
    {
        "key": "ctrl+oem_comma",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+oem_period",
        "command": "editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_comma",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    //FOLDING - LEVEL
    {
        "key": "ctrl+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+6",
        "command": "editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+7",
        "command": "editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled"
    },
    //FOLDING - SPECIAL
    {
        "key": "ctrl+8",
        "command": "editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+9",
        "command": "editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    //FOLDING - ALL
    {
        "key": "ctrl+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+0",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    //##########################################################################
    //### EDITOR - CODE COMPLETION ###
    //##########################################################################
    //SUGGEST - INLINE
    //{
    //    "key": "ctrl+left",
    //    "command": "editor.action.inlineSuggest.showPrevious",
    //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
    //},
    //{
    //    "key": "ctrl+up",
    //    "command": "editor.action.inlineSuggest.showPrevious",
    //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
    //},
    //{
    //    "key": "ctrl+down",
    //    "command": "editor.action.inlineSuggest.showNext",
    //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
    //},
    //{
    //    "key": "ctrl+right",
    //    "command": "editor.action.inlineSuggest.showNext",
    //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
    //},
    //{
    //    "key": "enter",
    //    "command": "editor.action.inlineSuggest.commit",
    //    "when": "editorTextFocus && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
    //},
    //{
    //    "key": "escape",
    //    "command": "editor.action.inlineSuggest.hide",
    //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
    //},
    //{
    //    "key": "escape",
    //    "command": "editor.action.inlineSuggest.hide",
    //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
    //},
    //{
    //    "key": "ctrl+space",
    //    "command": "runCommands",
    //    "args": {
    //        "commands": [
    //            "hideSuggestWidget",
    //            "editor.action.inlineSuggest.trigger"
    //        ]
    //    },
    //    "when": "editorTextFocus && !inlineSuggestionVisible && !editorReadonly"
    //},
    //### SUGGEST - WIDGET (CTRL+SPACE) ###
    //{
    //    "key": "ctrl+space",
    //    "command": "hideSuggestWidget",
    //    "when": "editorTextFocus && suggestWidgetVisible"
    //},
    //HOVER
    //{
    //    "key": "alt+f1",
    //    "command": "editor.action.escapeFocusHover",
    //    "when": "editorHoverFocused"
    //},
    
    //{
    //    "key": "ctrl+space",
    //    "command": "runCommands",
    //    "args": {
    //        "commands": [
    //            "editor.action.inlineSuggest.hide",
    //            "editor.action.triggerSuggest"
    //        ]
    //    },
    //    "when": "editorTextFocus && !suggestWidgetVisible && !editorReadonly"
    //},
    //### QUICK FIX (CTRL+SHIFT+SPACE) ###
    //{
    //    "key": "f1",
    //    "command": "closeParameterHints",
    //    "when": "editorTextFocus && parameterHintsVisible"
    //},
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerSuggest",
    },
    {
        "key": "ctrl+shift+space",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+space",
        "command": "editor.action.triggerParameterHints",
    },
    {
        "key": "f1",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    //{
    //    "key": "alt+f1",
    //    "command": "codeium.openChatView",
    //    "when": "true"
    //},
    //{
    //    "key": "ctrl+shift+alt+space",
    //    "command": "codeium.showNextCompletion"
    //},
    //##########################################################################
    //### SEARCH AND REPLACE ###
    //##########################################################################
    //SEARCH - IN FILES
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles",
        "when": "editorFocus || filesExplorerFocus"
    },
    //REPLACE - IN FILES
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.replaceInFiles",
        "when": "editorFocus || filesExplorerFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "search.action.replace",
        "when": "searchViewletFocus && replaceActive"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "search.action.replaceAll",
        "when": "searchViewletFocus && replaceActive"
    },
    //##########################################################################
    //### EDITOR DIFF ###
    //##########################################################################
    {
        "key": "ctrl+f3",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+shift+f3",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "alt+f3",
        "command": "editor.action.dirtydiff.next"
    },
    {
        "key": "alt+shift+f3",
        "command": "editor.action.dirtydiff.previous"
    },
    //##########################################################################
    //### SOURCE CONTROL MANAGER (GIT) ###
    //##########################################################################
    //STAGE FILE
    {
        "key": "ctrl+shift+alt+k",
        "command": "runCommands",
        "args": {
            "commands": [
                "git.stage",
                "git.openChange",
                "workbench.scm.focus",
                "list.focusFirst",
                "list.select"
            ]
        },
        "when": "editorTextFocus && workbench.scm.active"
    },
    //STAGE ALL
    {
        "key": "ctrl+shift+k",
        "command": "runCommands",
        "args": {
            "commands": [
                "git.stageAll",
                "git.openChange",
                "workbench.scm.focus",
                "list.focusFirst",
                "list.select"
            ]
        },
        "when": "editorTextFocus && workbench.scm.active"
    },
    {
        "key": "ctrl+alt+k",
        "command": "runCommands",
        "args": {
            "commands": [
                "git.stageAll",
                "git.openChange",
                "workbench.scm.focus",
                "list.focusFirst",
                "list.select"
            ]
        },
        "when": "editorTextFocus && workbench.scm.active"
    },
    //CHANGES
    {
        "key": "alt+k",
        "command": "git.openChange",
        "when": "editorTextFocus"
    },
    //COMMIT STAGED
    {
        "key": "enter",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.explorer.fileView.focus",
                "workbench.action.focusActiveEditorGroup",
                "git.commitStaged",
                "git.push"
            ]
        },
        "when": "focusedView == 'workbench.scm' && inputFocus"
    },
    //COMMIT ALL CHANGES
    {
        "key": "ctrl+enter",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.explorer.fileView.focus",
                "workbench.action.focusActiveEditorGroup",
                "git.stageAll",
                "git.commitStaged",
                "git.push"
            ]
        },
        "when": "focusedView == 'workbench.scm' && inputFocus"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.explorer.fileView.focus",
                "workbench.action.focusActiveEditorGroup",
                "git.stageAll",
                "git.commitStaged",
                "git.push"
            ]
        },
        "when": "focusedView == 'workbench.scm' && inputFocus"
    },
    //PUSH
    {
        "key": "ctrl+alt+p",
        "command": "runCommands",
        "args": {
            "commands": [
                //"workbench.scm.focus",
                //"workbench.explorer.fileView.focus",
                //"workbench.action.focusActiveEditorGroup",
                "git.push",
            ]
        }
    },
    //PULL
    {
        "key": "ctrl+shift+alt+p",
        "command": "runCommands",
        "args": {
            "commands": [
                //"workbench.scm.focus",
                //"workbench.explorer.fileView.focus",
                //"workbench.action.focusActiveEditorGroup",
                "git.pull",
            ]
        }
    },
    //FETCH
    {
        "key": "ctrl+shift+alt+f",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.scm.focus",
                "workbench.explorer.fileView.focus",
                "workbench.action.focusActiveEditorGroup",
                "git.fetch",
            ]
        }
    },
    //REVERT
    {
        "key": "alt+z",
        "command": "git.clean"
    },
    //##########################################################################
    //### COMPARE EDITOR ###
    //##########################################################################
    {
        "key": "f3",
        "command": "editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+f3",
        "command": "editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "f3",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+f3",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    //##########################################################################
    //### BOOKMARKS ###
    //##########################################################################
    {
        "key": "alt+e",
        "command": "bookmarksExplorer.focus"
    },
    {
        "key": "shift+alt+'",
        "command": "bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+1",
        "command": "bookmarks.clear"
    },
    {
        "key": "shift+alt+2",
        "command": "bookmarks.clearFromAllFiles"
    },
    {
        "key": "alt+1",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+2",
        "command": "bookmarks.toggleLabeled",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+'",
        "command": "bookmarks.jumpToNext",
        //"when": "editorTextFocus"
    },
    //##########################################################################
    //### TASKS ###
    //##########################################################################
    {
        "key": "ctrl+alt+t",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "ctrl+f5",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "f5",
        "command": "workbench.action.tasks.reRunTask"
    },
    {
        "key": "f6",
        "type": "shell",
        "command": "workbench.action.tasks.runTask",
        "args": "TDD-API-Dox"
    },
    {
        "key": "ctrl+f6",
        "type": "shell",
        "command": "workbench.action.tasks.runTask",
        "args": "TDD-API-Cover"
    },
    {
        "key": "f7",
        "type": "shell",
        "command": "workbench.action.tasks.runTask",
        "args": "TDD-API-CoreDox"
    },
    {
        "key": "ctrl+f7",
        "type": "shell",
        "command": "workbench.action.tasks.runTask",
        "args": "TDD-API-CoreCover"
    },
    //##########################################################################
    //### DEBUG ###
    //##########################################################################
    //### START ###
    {
        "key": "f9",
        "command": "workbench.action.debug.start",
        "when": "!inDebugMode && debugConfigurationType == 'php'"
    },
    {
        "key": "ctrl+f9",
        "command": "php.debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'php'"
    },
    //### STOP ###
    {
        "key": "shift+f9",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
        "key": "shift+f9",
        "command": "workbench.action.debug.disconnect",
        "when": "inDebugMode && focusedSessionIsAttach"
    },
    //### BREAKPOINTS ###
    {
        "key": "f8",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "!inDebugMode"
    },
    {
        "key": "ctrl+f8",
        "command": "editor.debug.action.toggleBreakpoint"
    },
    //### RUN ###
    {
        "key": "f9",
        "command": "workbench.action.debug.stepOver",
        "when": "inDebugMode && debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "workbench.action.debug.stepInto",
        "when": "inDebugMode && debugState != 'inactive'"
    },
    {
        "key": "shift+f10",
        "command": "workbench.action.debug.stepOut",
        "when": "inDebugMode && debugState == 'stopped'"
    },
    {
        "key": "f8",
        "command": "editor.debug.action.goToNextBreakpoint",
        "when": "inDebugMode"
    },
    {
        "key": "shift+f8",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    //##########################################################################
    //### KEYBINDINGS CLEAR ###
    //##########################################################################
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "shift+tab",
        "command": "-workbench.action.terminal.enterAccessibilityMode",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+oem_4",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+insert",
        "command": "-editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "shift+alt+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "shift+alt+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "alt+z",
        "command": "-editor.action.toggleWordWrap"
    },
    {
        "key": "alt+down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+up",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "up",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "shift+escape",
        "command": "-removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    {
        "key": "shift+escape",
        "command": "-closeReferenceSearch",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "shift+escape",
        "command": "-cancelSelection",
        "when": "editorHasSelection && textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "-cursorColumnSelectLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+pagedown",
        "command": "-cursorColumnSelectPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+pageup",
        "command": "-cursorColumnSelectPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "-cursorColumnSelectRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-cursorColumnSelectUp",
        "when": "textInputFocus"
    },
    {
        "key": "shift+pagedown",
        "command": "-cursorPageDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+pageup",
        "command": "-cursorPageUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+backspace",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "shift+pagedown",
        "command": "-cursorColumnSelectPageDown",
        "when": "editorColumnSelection && textInputFocus"
    },
    {
        "key": "shift+pageup",
        "command": "-cursorColumnSelectPageUp",
        "when": "editorColumnSelection && textInputFocus"
    },
    {
        "key": "ctrl+y",
        "command": "-redo"
    },
    {
        "key": "ctrl+shift+u",
        "command": "-workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-workbench.action.terminal.selectToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-workbench.action.terminal.selectToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+oem_2",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+shift+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+escape",
        "command": "-closeParameterHints",
        "when": "editorFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "escape",
        "command": "-editor.action.inlineSuggest.hide",
        "when": "inlineSuggestionVisible"
    },
    {
        "key": "ctrl+alt+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openLocalFolder",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+k o",
        "command": "-workbench.action.files.showOpenedFileInNewWindow",
        "when": "emptyWorkspaceSupport"
    },
    {
        "key": "ctrl+alt+win+n",
        "command": "-welcome.showNewFileEntries"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f5",
        "command": "-debug.openView",
        "when": "!debuggersAvailable"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "ctrl+k r",
        "command": "-workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.terminal.runRecentCommand",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+shift+oem_comma",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-list.toggleSelection",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+delete",
        "command": "-editor.action.clipboardCutAction"
    },
    {
        "key": "ctrl+insert",
        "command": "-editor.action.clipboardCopyAction"
    },
    {
        "key": "ctrl+delete",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+space",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !config.editor.suggest.selectQuickSuggestions && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    {
        "key": "ctrl+space",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "config.terminal.integrated.shellIntegration.suggestEnabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    {
        "key": "ctrl+space",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+backspace",
        "command": "-deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+delete",
        "command": "-deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+oem_comma",
        "command": "-workbench.action.openSettings"
    },
    {
        "key": "alt+f1",
        "command": "-editor.action.showAccessibilityHelp"
    },
    {
        "key": "alt+f1",
        "command": "-workbench.action.terminal.showAccessibilityHelp",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "alt+oem_6",
        "command": "-editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+oem_4",
        "command": "-editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+left",
        "command": "-editor.action.inlineSuggest.undo",
        "when": "canUndoInlineSuggestion && !editorReadonly"
    },
    {
        "key": "ctrl+right",
        "command": "-editor.action.inlineSuggest.acceptNextWord",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "-breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+oem_period",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+oem_comma",
        "command": "-editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+oem_period",
        "command": "-acceptSelectedCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+k f",
        "command": "-workbench.action.closeFolder",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "shift+escape",
        "command": "-workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "shift+escape",
        "command": "-closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "shift+escape",
        "command": "-closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    {
        "key": "shift+escape",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible && !isComposing"
    },
    {
        "key": "shift+escape",
        "command": "-closeDirtyDiff",
        "when": "dirtyDiffVisible"
    },
    {
        "key": "shift+escape",
        "command": "-closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+escape",
        "command": "-closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+7",
        "command": "-workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "ctrl+6",
        "command": "-workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "-editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "-editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "-editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "-editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "-editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "-editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_4",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+k ctrl+oem_period",
        "command": "-editor.removeManualFoldingRanges",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "-editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_plus",
        "command": "-editor.unfoldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_6",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "-editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_minus",
        "command": "-editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+escape",
        "command": "-workbench.action.hideComment",
        "when": "commentEditorFocused"
    },
    {
        "key": "shift+escape",
        "command": "-leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
    },
    {
        "key": "shift+escape",
        "command": "-hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+escape",
        "command": "-hideCodeActionWidget",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "shift+escape",
        "command": "-cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "shift+escape",
        "command": "-cancelLinkedEditingInput",
        "when": "LinkedEditingInputVisible && editorTextFocus"
    },
    {
        "key": "shift+escape",
        "command": "-workbench.action.terminal.hideFind",
        "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "alt+z",
        "command": "-workbench.action.terminal.sizeToContentWidth",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
    },
    {
        "key": "ctrl+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+oem_5",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+k ctrl+shift+oem_5",
        "command": "-workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorLeft"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorUp"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+shift+z",
        "command": "-redo"
    },
    {
        "key": "ctrl+enter",
        "command": "-workbench.action.submitComment",
        "when": "commentEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-scm.acceptInput",
        "when": "scmRepository"
    },
    {
        "key": "f7",
        "command": "-editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+f7",
        "command": "-editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+alt+c",
        "command": "-mysql.db.active",
        "when": "editorLangId == 'sql'"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+alt+f3",
        "command": "-editor.action.dirtydiff.previous",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "alt+f3",
        "command": "-editor.action.dirtydiff.next",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-markdown-preview-enhanced.runAllCodeChunks",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "shift+enter",
        "command": "-markdown-preview-enhanced.runCodeChunk",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-markdown-preview-enhanced.syncPreview",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown-preview-enhanced.openPreview",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+f3",
        "command": "-editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f3",
        "command": "-editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    {
        "key": "ctrl+f5",
        "command": "-debug.openView",
        "when": "!debuggersAvailable"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-workbench.action.toggleDevTools",
        "when": "isDevelopment"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+enter",
        "command": "-codegeex.interactive-mode",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "alt+t",
        "command": "-codegeex.prompt-mode",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+w",
        "command": "-codegeex.welcome-page"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "ctrl+shift+;",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+; ctrl+a",
        "command": "-testing.debugAll"
    },
    {
        "key": "ctrl+; ctrl+e",
        "command": "-testing.debugFailTests"
    },
    {
        "key": "ctrl+; ctrl+l",
        "command": "-testing.debugLastRun"
    },
    {
        "key": "ctrl+; ctrl+c",
        "command": "-testing.debugAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+f",
        "command": "-testing.debugCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+m",
        "command": "-testing.openOutputPeek"
    },
    {
        "key": "ctrl+; ctrl+r",
        "command": "-testing.refreshTests",
        "when": "testing.canRefresh"
    },
    {
        "key": "ctrl+; e",
        "command": "-testing.reRunFailTests"
    },
    {
        "key": "ctrl+; l",
        "command": "-testing.reRunLastRun"
    },
    {
        "key": "ctrl+; a",
        "command": "-testing.runAll"
    },
    {
        "key": "ctrl+; c",
        "command": "-testing.runAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; f",
        "command": "-testing.runCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+o",
        "command": "-testing.showMostRecentOutput",
        "when": "testing.hasAnyResults"
    },
    {
        "key": "ctrl+; ctrl+i",
        "command": "-testing.toggleInlineTestOutput"
    },
    {
        "key": "ctrl+; ctrl+x",
        "command": "-testing.cancelRun"
    },
    {
        "key": "alt+\\",
        "command": "-editor.action.inlineSuggest.trigger",
        "when": "editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
        "key": "alt+]",
        "command": "-codeium.showNextCompletion"
    },
    {
        "key": "alt+[",
        "command": "-codeium.showPreviousCompletion"
    },
    {
        "key": "ctrl+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+shift+z",
        "command": "-interactiveEditor.undoToClipboard",
        "when": "interactiveEditorHasProvider && interactiveEditorVisible && interactiveEditorLastEditKind == 'simple'"
    },
    {
        "key": "f12",
        "command": "-editor.gotoNextSymbolFromResult",
        "when": "hasSymbols"
    },
    {
        "key": "shift+alt+l",
        "command": "-bookmarks.expandSelectionToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "-bookmarks.expandSelectionToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "-bookmarks.shrinkSelection",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+9",
        "command": "-workbench.action.openEditorAtIndex9"
    },
    {
        "key": "alt+8",
        "command": "-workbench.action.openEditorAtIndex8"
    },
    {
        "key": "alt+7",
        "command": "-workbench.action.openEditorAtIndex7"
    },
    {
        "key": "alt+6",
        "command": "-workbench.action.openEditorAtIndex6"
    },
    {
        "key": "alt+5",
        "command": "-workbench.action.openEditorAtIndex5"
    },
    {
        "key": "alt+4",
        "command": "-workbench.action.openEditorAtIndex4"
    },
    {
        "key": "alt+3",
        "command": "-workbench.action.openEditorAtIndex3"
    },
    {
        "key": "alt+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+k s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-filesExplorer.findInFolder",
        "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
    },
    {
        "key": "shift+alt+f",
        "command": "-search.action.restrictSearchToFolder",
        "when": "folderMatchWithResourceFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+alt+f",
        "command": "-workbench.view.extension.favorites-explorer",
        "when": "editorTextFocus"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "key": "f9",
        "command": "-phpcompanion.runTests",
        "when": "!inDebugMode"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f5",
        "command": "-workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
        "key": "shift+f10",
        "command": "-editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "f11",
        "command": "-php.debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'php'"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "f6",
        "command": "-workbench.action.debug.pause",
        "when": "debugState == 'running'"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.debug.prevConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.debug.nextConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+f11",
        "command": "-workbench.action.debug.stepIntoTarget",
        "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
    },
    {
        "key": "shift+f5",
        "command": "-workbench.action.debug.disconnect",
        "when": "focusedSessionIsAttach && inDebugMode"
    },
    {
        "key": "space",
        "command": "-debug.toggleBreakpoint",
        "when": "breakpointsFocused && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-debug.setVariable",
        "when": "variablesFocused"
    },
    {
        "key": "f2",
        "command": "-debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "delete",
        "command": "-debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected"
    },
    {
        "key": "delete",
        "command": "-debug.removeBreakpoint",
        "when": "breakpointsFocused && !breakpointInputFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "alt+enter",
        "command": "-debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "shift+alt+.",
        "command": "-editor.action.autoFix",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "tab",
        "command": "-editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+f9",
        "command": "-editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "alt+f9",
        "command": "-editor.action.nextCommentThreadAction",
        "when": "editorFocus"
    },
    {
        "key": "f10",
        "command": "-php.debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'php'"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-codeium.openChatView",
        "when": "false"
    },
    {
        "key": "ctrl+alt+a",
        "command": "-codeium.openChatView",
        "when": "true"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "f11",
        "command": "-phptools.debug.startWithStopOnEntry",
        "when": "debuggersAvailable && !inDebugMode && debugConfigurationType == 'php'"
    },
    {
        "key": "f10",
        "command": "-phptools.debug.startWithStopOnEntry",
        "when": "debuggersAvailable && !inDebugMode && debugConfigurationType == 'php'"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-cursorWordEndRightSelect",
        "when": "textInputFocus"
    }
]
